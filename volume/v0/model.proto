syntax = "proto3";

option go_package = "github.com/n0stack/proto.go/volume/v0;pvolume";

package n0stack.volume;

import "google/protobuf/empty.proto";

import "metadata/v0/model.proto";

service VolumeService {
  rpc ListVolumes(ListVolumesRequest) returns (ListVolumesResponse) {}

  rpc GetVolume(GetVolumeRequest) returns (Volume) {}

  rpc ApplyVolume(ApplyVolumeRequest) returns (Volume) {}

  rpc DeleteVolume(DeleteVolumeRequest) returns (google.protobuf.Empty) {}
}

message Volume {
  string id = 1;
  n0stack.metadata.Metadata metadata = 2;
  Spec spec = 3;
  Status status = 4;
}

message Spec {
  uint64 bytes = 1;
}

message Status {
  enum State {
    // not scheduled
    PENDING = 0;

    AVAILABLE = 1;

    // unknown state because failed to connect for scheduled node after RUNNING.
    FAILED = 2;

    // unknown state because failed to connect for scheduled node after RUNNING.
    UNKNOWN = 3;
  }
  State state = 1;
}

message ListVolumesRequest {}

message ListVolumesResponse {
  repeated Volume volumes = 1;
}

message GetVolumeRequest {
  string id = 1;
}

// message CreateVolumeRequest {
//   string id = 1;
//   n0stack.metadata.Metadata metadata = 2;
//   Spec spec = 3;

//   string image_id = 5;
// }

message ApplyVolumeRequest {
  string id = 1;
  n0stack.metadata.Metadata metadata = 2;
  Spec spec = 3;
}

message DeleteVolumeRequest {
  string id = 1;
}
