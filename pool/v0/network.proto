syntax = "proto3";

option go_package = "github.com/n0stack/proto.go/pool/v0;ppool";

package n0stack.pool;

import "google/protobuf/empty.proto";
import "v0/metadata.proto";
import "resource/v0/network_interface.proto";

service NetworkService {
  rpc ListNetworks(ListNetworksRequest) returns (ListNetworksResponse) {}

  rpc GetNetwork(GetNetworkRequest) returns (Network) {}

  rpc ApplyNetwork(ApplyNetworkRequest) returns (Network) {}

  rpc DeleteNetwork(DeleteNetworkRequest) returns (google.protobuf.Empty) {}

  rpc ReserveNetworkInterface(ReserveNetworkInterfaceRequest) returns (n0stack.resource.NetworkInterface) {}
  rpc ReleaseNetworkInterface(ReleaseNetworkInterfaceRequest) returns (google.protobuf.Empty) {}
}

message Network {
  n0stack.Metadata metadata = 1;
  NetworkSpec spec = 2;
  NetworkStatus status = 3;
}

message NetworkSpec {
  string ipv4_cidr = 1;
  string ipv4_gateway = 2;

  string ipv6_cidr = 3;
  string ipv6_gateway = 4;

  string name_server = 5;
  string domain = 6;
}

message NetworkStatus {
  enum NetworkState {
    // falied state because failed some process on API.
    FAILED = 0;
  
    // unknown state because failed to connect for scheduled node after RUNNING.
    UNKNOWN = 1;

    AVAILABLE = 2;
  }
  NetworkState state = 1;

  map<string, n0stack.resource.NetworkInterface> reserved_network_interfaces = 2;
}

message ListNetworksRequest {}
message ListNetworksResponse{
  repeated Network networks = 1;
}

message GetNetworkRequest {
  string name = 1;
}

message ApplyNetworkRequest {
  n0stack.Metadata metadata = 1;
  NetworkSpec spec = 2;
}

message DeleteNetworkRequest {
  string name = 1;
}

message ReserveNetworkInterfaceRequest {
  string name = 1;
  string network_interface_name = 2;

  map<string, string> annotations = 3;

  // 以下 optional
  string hardware_address = 4;

  string ipv4_address = 5;
  string ipv6_address = 6;
}

message ReleaseNetworkInterfaceRequest {
  string name = 1;
  string network_interface_name = 2;
}
