syntax = "proto3";

option go_package = "github.com/n0stack/proto.go/compute/v0;pcompute";

package n0stack.compute;

import "google/protobuf/empty.proto";

import "metadata/v0/model.proto";
import "kvm/v0/model.proto";
import "tap/v0/model.proto";
import "qcow2/v0/model.proto";

service ComputeService {
  rpc Get(GetRequest)   returns (Compute) {}

  rpc Apply(ApplyRequest) returns (Compute) {}

  rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {}
}

message Compute {
  string id = 1;
  n0stack.metadata.Metadata metadata = 2;
  Spec spec = 3;
  Status status = 4;
}

message Spec {
  // node
  // 実装予定
  message NodeSelector {
    string id = 1;
    // map<string, string> labels = 2;
  }
  NodeSelector nodeSelector = 1;

  // CPU
  uint32 vcpus = 2;

  // Memory
  uint64 memory_bytes = 3;

  // Volume
  // volumeに統合するため削除予定
  string volume_source_url = 4;

  message NIC {
    string network = 1;
    repeated string ipaddrs = 2;
  }
}

message Status {
  enum State {
    // not scheduled
    PENDING = 0;

    // running vm
    RUNNING = 1;

    // unknown state because failed to connect for scheduled node after RUNNING.
    UNKNOWN = 2;
  }
  State state = 1;

  message VM {
    string id = 1;
    n0stack.kvm.Spec spec = 2;
    string connection = 3;
  }
  VM vm = 2;

  message Volume {
    string id = 1;
    n0stack.qcow2.Spec spec = 2;
  }
  Volume volume = 3;

  message NIC {
    string id = 1;
    n0stack.tap.Spec spec = 2;
  }
  repeated NIC nics = 4;
}

message GetRequest {
  string id = 1;
}

message ApplyRequest {
  string id = 1;
  n0stack.metadata.Metadata metadata = 2;
  Spec spec = 3;
}

message DeleteRequest {
  string id = 1;
}
