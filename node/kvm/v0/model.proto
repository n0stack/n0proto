syntax = "proto3";

option go_package = "github.com/n0stack/proto.go/node/kvm/v0;pkvm";

package n0stack.node.kvm;

import "google/protobuf/empty.proto";

service KVMService {
  rpc GetKVM(GetKVMRequest) returns (KVM) {}

  rpc ApplyKVM(ApplyKVMRequest) returns (KVM) {}
  // {
  //   option (google.api.http) = {
  //     post: "/v0/nodes/{node_id}/kvms/{id}"
  //     body: "spec"
  //   };
  // }

  rpc DeleteKVM(DeleteKVMRequest) returns (google.protobuf.Empty) {}

  // VM actions
  rpc Boot(ActionKVMRequest)         returns (KVM) {}
  rpc Reboot(ActionKVMRequest)       returns (KVM) {}
  rpc HardReboot(ActionKVMRequest)   returns (KVM) {}
  rpc Shutdown(ActionKVMRequest)     returns (KVM) {}
  rpc HardShutdown(ActionKVMRequest) returns (KVM) {}
  rpc Save(ActionKVMRequest)         returns (KVM) {}
}

message KVM {
  string id = 1;
  Spec spec = 2;
  Status status = 3;

  // 空の場合は自分であると認識する
  string node_id = 4;
}

message Spec {
  // CPU
  uint32 vcpus = 1;

  // Memory
  uint64 memory_bytes = 2;

  // Storage
  repeated string qcow2_ids = 3;

  // Network
  message Netdev {
    string tap_id = 1;
    string hwaddr = 2;
  }
  repeated Netdev nics = 4;
}

message Status {
  enum RunLevel {
    SHUTDOWN = 0;
    RUNNING = 1;
    PAUSED = 2;
  }
  RunLevel run_level = 1;

  // TCP port of websocket vnc which is opened by qemu
  uint32 vnc_port = 2;
  uint32 vnc_websocket_port = 3;
}

message GetKVMRequest {
  string id = 1;
  string node_id = 5;
}

message ApplyKVMRequest {
  string id = 1;
  Spec spec = 3;
  string node_id = 5;
}

message DeleteKVMRequest {
  string id = 1;
  string node_id = 5;
}

message ActionKVMRequest {
  string id = 1;
  string node_id = 5;
}
