syntax = "proto3";

option go_package = "github.com/n0stack/proto.go/network/v0;pnetwork";

package n0stack.network;

import "google/protobuf/empty.proto";

import "metadata/v0/model.proto";

service NetworkService {
  rpc ListNetworks(ListNetworkRequest)   returns (ListNetworkResponse) {}

  rpc GetNetwork(GetNetworkRequest)   returns (Network) {}

  rpc ApplyNetwork(ApplyNetworkRequest) returns (Network) {}

  rpc DeleteNetwork(DeleteNetworkRequest) returns (google.protobuf.Empty) {}
}

message Network {
  string id = 1;
  n0stack.metadata.Metadata metadata = 2;
  Spec spec = 3;
  Status status = 4;
}

message Spec {
  string ipv4_cidr = 1;
  string ipv4_gateway = 2;

  // string ipv6_cidr = 3;
  // string ipv6_gateway = 4;

  string name_server = 5;
  string domain = 6;
}

message Status {
  enum State {
    // not scheduled
    PENDING = 0;

    AVAILABLE = 1;

    // unknown state because failed to connect for scheduled node after RUNNING.
    FAILED = 2;

    // unknown state because failed to connect for scheduled node after RUNNING.
    UNKNOWN = 3;
  }
  State state = 1;
}

message ListNetworkRequest {}

message ListNetworkResponse{
  repeated Network networks = 1;
}

message GetNetworkRequest {
  string id = 1;
}

message ApplyNetworkRequest {
  string id = 1;
  n0stack.metadata.Metadata metadata = 2;
  Spec spec = 3;
}

message DeleteNetworkRequest {
  string id = 1;
}
