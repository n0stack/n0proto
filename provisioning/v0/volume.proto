syntax = "proto3";

option go_package = "github.com/n0stack/proto.go/provisioning/v0;pprovisioning";

package n0stack.provisioning;

import "google/protobuf/empty.proto";
import "resource/v0/storage.proto";
import "v0/metadata.proto";

service VolumeService {
  rpc ListVolumes(ListVolumesRequest) returns (ListVolumesResponse) {}

  rpc GetVolume(GetVolumeRequest) returns (Volume) {}

  rpc ApplyVolume(ApplyVolumeRequest) returns (Volume) {}
  
  rpc DeleteVolume(DeleteVolumeRequest) returns (google.protobuf.Empty) {}

  rpc DownloadVolume(DownloadVolumeRequest) returns (Volume) {}
}

message Volume {
  n0stack.Metadata metadata = 1;
  VolumeSpec spec = 2;
  VolumeStatus status = 3;
}

message VolumeSpec {
  n0stack.resource.Storage storage = 1;
}

message VolumeStatus {
  enum VolumeState {
    // falied state because failed some process on API.
    FAILED = 0;

    // unknown state because failed to connect for scheduled node after RUNNING.
    UNKNOWN = 1;

    AVAILABLE = 2;
  }
  VolumeState state = 1;

  string node_name = 2;
  string storage_name = 3;
}

message ListVolumesRequest {}
message ListVolumesResponse {
  repeated Volume volumes = 1;
}

message GetVolumeRequest {
  string name = 1;
}

message ApplyVolumeRequest {
  n0stack.Metadata metadata = 1;
  VolumeSpec spec = 2;
}

message DeleteVolumeRequest {
  string name = 1;
}

message DownloadVolumeRequest {
  n0stack.Metadata metadata = 1;
  VolumeSpec spec = 2;

  string source_url = 3;
}
